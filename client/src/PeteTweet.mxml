<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:petetweet="com.petetweet.client.components.*"
	creationComplete="init();">
	<mx:Script source="com/petetweet/client/scripts/ConstantVariables.as" />
	<mx:Style>
        RichTextEditor
		{
		textAreaStyleName: ‘rteStyle’;
		}
		
		.rteStyle
		{
		font-size:16;
		font-family:Verdana;
		color:#000000;
		}
    </mx:Style>

	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import com.petetweet.client.events.*;
			import mx.rpc.events.FaultEvent;
			import com.adobe.crypto.SHA256;
			import com.adobe.crypto.MD5;
			public var gw:NetConnection = new NetConnection();
			
			[Bindable]
			private var publicTweets:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var myTweets:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var searchTweets:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var userProfile:Object = new Object();
			
			[Bindable]
			public var searchResults:ArrayCollection = new ArrayCollection();
			
			public var status:Boolean = false;
			public var t:Timer = new Timer(60000);
			
			
			
			public function init():void{
				gw.connect("http://www.petetweet.com/api");
				
				gw.call(API_STATUS, new Responder(statusPass, statusFail));
				gw.call(API_GETALL, new Responder(gotPublicTweets, gotTweetFault));
				
				t.addEventListener( TimerEvent.TIMER, poll, false, 0, true );
				t.start();
			}
			
			public function poll(event:TimerEvent):void {
				t.stop()
				updateTweets();
				
				t.reset();
				t.start();
				
			}
			
			public function loginFormInit():void {
				loginForm.addEventListener("LoginEvent",loginHandler);
				loginForm.addEventListener("RegisterEvent",registerHandler);
			}
			public function goToMainPage():void {
				viewstack1.selectedIndex = 2;
				updateTweets();
				gw.call("petetweet.profile", new Responder(gotProfile, gotTweetFault))
			}
			
			public function gotProfile(p:Object):void {
				userProfile = p;
			}
			
			public function doLogout():void {
				gw.call("petetweet.logout", new Responder(gotLogout, gotLogoutFault))
			}
			
			public function gotLogout(o:Object):void {
				viewstack1.selectedIndex = 0;
				gw.call(API_STATUS, new Responder(statusPass, statusFail));
			}
			
			public function gotLogoutFault(o:Object):void {
				
			}
			
			//--------------------TWEET FUNCTIONS----------------------------------
			public function gotPublicTweets(arr:Array):void {
				publicTweets = new ArrayCollection(arr);
				trace("Tweet get all passed");
			}
			
			public function gotMyTweets(arr:Array):void {
				myTweets = new ArrayCollection(arr);
			}
			public function gotTweetFault(o:Object):void{
				trace("Tweet get all failed");
			}
			public function updateTweets():void {
				gw.call(API_GETALL, new Responder(gotPublicTweets, gotTweetFault));
				if (status) {
					gw.call("petetweet.gettweets", new Responder(gotMyTweets, gotTweetFault));
				}
			}
			
			//--------------------END TWEET FUNCTIONS----------------------------------
			
			//--------------------STATUS FUNCTIONS----------------------------------
			//TODO:Put this information in a page before the login page
			public function statusPass(b:Boolean):void {
				if(b) {
					status = true;
					goToMainPage();
				}
				else {
					viewstack1.selectedIndex = 1;
				}
			}
			public function statusFail(b:Boolean):void {
				viewstack1.selectedIndex = 1;
			}
			
			//--------------------END STATUS FUNCTIONS----------------------------------
			
			//--------------------LOGIN FUNCTIONS----------------------------------
			public function loginHandler(event:LoginEvent):void {
				processLogin(event.username, event.password);
				trace("Got login: "+event.username);
			}
			public function processLogin(username:String,password:String):void{
				//TODO: error check username and password
				password = SHA256.hash(password);	
				gw.call(API_LOGIN, new Responder(loginPass, loginFail),username,password);
			}
			public function loginPass(userid:int):void {
				gw.call(API_STATUS, new Responder(statusPass, statusFail));
			}
			public function loginFail(o:Object):void {
				loginForm.dispatchEvent(new LoginFailEvent(o));
			}
			//-----------------END LOGIN FUCTIONS-----------------------------------
			
			//-----------------REGISTER FUNCTIONS-----------------------------------
			public function registerHandler(event:RegisterEvent):void {
				processRegister(event.username, event.password, event.cpassword, event.firstname,event.lastname, event.email);
				trace("Got login: "+event.username);
			}
			public function processRegister(username:String,password:String,cpassword:String,
											firstname:String,lastname:String,email:String):void {
				password = SHA256.hash(password);
				gw.call(API_REGISTER, new Responder(registerPass, registerFail),username,password,firstname,lastname,email);
			}
			public function registerPass(o:Object):void {
				//TODO: login perhaps? or make the user login w/ new user/pass combo, change o:Object to correct param
				loginForm.dispatchEvent(new RegisterPassEvent());			
			}
			public function registerFail(o:Object):void{
				loginForm.dispatchEvent(new RegisterFailEvent(o));			
			}
			//-----------------END REGISTER FUNCTIONS-------------------------------
			
			//-----------------POST FUNCTIONS-------------------------------
			public function handlePost():void{
				var textToSend:String = tweetEditor.htmlText;
				gw.call(API_POST, new Responder(postPass, postFail),textToSend);
			}
			public function postPass(o:Object):void{
				trace("Post Passed");
				updateTweets();
				tweetEditor.text = "";
				updateCount();
				
			}
			public function postFail(o:Object):void{
				trace("Post Failed");
			}
			//-----------------END POST FUNCTIONS-------------------------------
			
			//-----------------SEARCH FUNCTIONS-------------------------------
			public function doSearch():void{
				var searchString:String = searchForm.text;
				gw.call("petetweet.search", new Responder(gotSearchResults, gotSearchFault), searchString);
			}
			public function gotSearchResults(arr:Array):void{
				trace("Post Passed");
				searchResults = new ArrayCollection(arr);
				
			}
			public function gotSearchFault(o:Object):void{
				trace("Post Failed");
			}
			//-----------------END SEARCH FUNCTIONS-------------------------------
			
			public function customizeEditor():void {
				tweetEditor.toolbar.removeChild(tweetEditor.bulletButton);
				tweetEditor.toolbar.removeChild(tweetEditor.alignButtons);
				tweetEditor.textArea.addEventListener(TextEvent.TEXT_INPUT, gotText);
				tweetEditor.textArea.maxChars = 256
				tweetEditor.fontSizeArray = new Array("16", "20");
				
			}
			
			private function updateCount():void {
				remainingChars.text = String(256 - tweetEditor.textArea.length);
			}
			
			private function getUserTweets():void {
         		gw.call("petetweet.getusertweets", new Responder(gotUserTweets, gotTweetFault), searchGrid.selectedItem);
            }
            
            private function gotUserTweets(arr:Array):void {
            	searchTweets = new ArrayCollection(arr);
            }
            
            private function gotText(evt:TextEvent):void {
            	if (evt.text == "\n") {
					var a:Array = tweetEditor.htmlText.split("</P>", 256);
					if (a.length > 10) {
						evt.preventDefault();
					}
            	}
            }
            
            private function gravatarUrl(email:String, size:int):String {
				
				"http://www.gravatar.com/avatar/917fb9355a5d0593f86472f7fb61df41?s=60&d=identicon&r=G"
				if (email.length == 0) {
					email = "nothing"
				}
				var gid:String = MD5.hash(email);
				var url:String = "http://www.gravatar.com/avatar/" + gid + "?s="+ size +"&d=identicon&r=G";
				
				trace(url);
				return url;
			}



			
		]]>
	</mx:Script>
	<mx:ViewStack id="viewstack1" left="0" right="0" top="0" bottom="0" selectedIndex="0">
		<mx:Canvas label="loading" width="100%" height="100%">
			<mx:ProgressBar indeterminate="true" horizontalCenter="0" verticalCenter="0" labelPlacement="center" width="320" height="18"/>
			<mx:Label text="Welcome to PeteTweet!" verticalCenter="-66" fontSize="36" horizontalCenter="0"/>
		</mx:Canvas>
		<mx:Canvas label="login" width="100%" height="100%">
			<petetweet:login_register id="loginForm" creationComplete="loginFormInit();" left="10" top="10">
			</petetweet:login_register>
			<mx:Panel layout="absolute" title="Here is what's happening on PeteTweet" right="10" left="380" top="10" bottom="10">
				<mx:List dataProvider="{publicTweets}" variableRowHeight="true" right="0" left="0" top="0" bottom="0">
					<mx:itemRenderer>
						<mx:Component>
							<petetweet:PublicTweetRenderer>
								
							</petetweet:PublicTweetRenderer>
						        	</mx:Component>
					</mx:itemRenderer>
				</mx:List>
			</mx:Panel>
			<mx:LinkButton label="Refresh the Timeline" click="updateTweets();" right="22" top="14"/>
			<mx:Label text="PeteTweet" fontSize="36" bottom="10" left="10"/>
		</mx:Canvas>
		<mx:Canvas label="loading" width="100%" height="50%">
		
		<mx:ViewStack id="appStack" left="0" right="0" top="39" bottom="0" selectedIndex="0">
			<mx:Canvas label="Home Page" width="100%" height="100%">
				<mx:RichTextEditor y="10" title="What are you doing?" width="421" height="213" x="10" id="tweetEditor"
					creationComplete="customizeEditor();"  change="updateCount();" textAreaStyleName="rteStyle">
				</mx:RichTextEditor>
		        <mx:Button x="364" y="192" label="Post" click="handlePost();"/>
				<mx:Button x="285" y="192" label="Refresh" click="updateTweets();"/>
				<mx:Panel x="10" width="421" layout="absolute" title="Search" bottom="10" top="231">
					<mx:TextInput y="10" left="10" right="83" id="searchForm"/>
					<mx:Button y="10" label="Search" right="10" click="doSearch();"/>
					<mx:DataGrid id="searchGrid" left="10" right="10" top="40" bottom="39" dataProvider="{searchResults}">
						<mx:columns>
							<mx:DataGridColumn headerText="Username" dataField="username"/>
							<mx:DataGridColumn headerText="First Name" dataField="firstname"/>
							<mx:DataGridColumn headerText="Last Name" dataField="lastname"/>
						</mx:columns>
					</mx:DataGrid>
					<mx:Button label="View User's Tweets" click="getUserTweets();" bottom="10" right="10"/>
					<mx:Button label="Clear Results" click="searchResults.removeAll();" bottom="10" left="10"/>
				</mx:Panel>
				<mx:TabNavigator bottom="10" top="10" right="10" left="439">
					<mx:Canvas label="Public Timeline" width="100%" height="100%">
						<mx:List dataProvider="{publicTweets}" variableRowHeight="true" right="0" left="0" top="0" bottom="0">
							<mx:itemRenderer>
								<mx:Component>
									<petetweet:TweetRenderer>
										
									</petetweet:TweetRenderer>
								        	</mx:Component>
							</mx:itemRenderer>
						</mx:List>
					</mx:Canvas>
					<mx:Canvas label="My Updates" width="100%" height="100%">
						<mx:List dataProvider="{myTweets}" variableRowHeight="true" left="0" right="0" top="0" bottom="0">
							<mx:itemRenderer>
								<mx:Component>
									<petetweet:TweetRenderer>
										
									</petetweet:TweetRenderer>
								        	</mx:Component>
							</mx:itemRenderer>
						</mx:List>
					</mx:Canvas>
					<mx:Canvas id="searchTimeline" label="Search Timeline" width="100%" height="100%">
						<mx:List dataProvider="{searchTweets}" variableRowHeight="true" right="0" left="0" top="0" bottom="0">
							<mx:itemRenderer>
								<mx:Component>
									<petetweet:TweetRenderer>
										
									</petetweet:TweetRenderer>
								        	</mx:Component>
							</mx:itemRenderer>
						</mx:List>
					</mx:Canvas>
				</mx:TabNavigator>
				<mx:Label x="217" y="17" text="Remaining Characters:"/>
				<mx:Label x="364" y="17" text="256" fontSize="10" fontWeight="bold" id="remainingChars"/>
			</mx:Canvas>
			<mx:Canvas label="Messaging" width="100%" height="100%">
			</mx:Canvas>
			<mx:Canvas label="Profile" width="100%" height="100%">
				<mx:Panel width="365" layout="absolute" title="Profile Editor" top="10" bottom="10" left="10">
					<mx:Label x="10" y="18" text="Howdy, " fontSize="19"/>
					<mx:Label x="83" y="18" text="{userProfile.firstname}" fontSize="19" width="152" truncateToFit="true"/>
					<mx:Image x="243" y="10" width="90" height="90" source="{gravatarUrl(userProfile.email, 90)}"/>
					<mx:Label x="10" y="114" text="First Name:"/>
					<mx:Label x="10" y="114" text="First Name:"/>
					<mx:Label x="10" y="328" text="Password:"/>
					<mx:Label x="10" y="384" text="Confirm:"/>
					<mx:Label x="10" y="252" text="Email Address:"/>
					<mx:Label x="10" y="170" text="Last Name:"/>
					<mx:TextInput x="10" y="354" width="242"/>
					<mx:TextInput x="10" y="140" width="242" text="{userProfile.firstname}"/>
					<mx:TextInput x="10" y="410" width="242"/>
					<mx:TextInput x="10" y="278" width="242" text="{userProfile.email}"/>
					<mx:TextInput x="10" y="196" width="242" text="{userProfile.lastname}"/>
					<mx:Button x="89" label="Reset" bottom="10"/>
					<mx:Button x="180" label="Change!" bottom="10"/>
					<mx:LinkButton x="228" y="106" label="(Get a Gravatar)" 
						click="var u:URLRequest = new URLRequest('http://gravatar.com'); navigateToURL(u,'_blank'); "/>
					<mx:Label x="10" y="55" text="You have been a memeber since:"/>
					<mx:Label x="10" y="73" text="{userProfile.reg_date}" width="216" fontStyle="italic"/>
				</mx:Panel>
			</mx:Canvas>
			<mx:Canvas label="Help" width="100%" height="100%">
				<mx:Panel layout="absolute" left="10" top="10" bottom="10" width="250" title="Help Documents">
					<mx:List left="0" right="0" top="0" bottom="0"></mx:List>
				</mx:Panel>
				<mx:Panel layout="absolute" right="10" bottom="10" top="10" left="268">
					<mx:TextArea left="0" right="0" top="0" bottom="0"/>
				</mx:Panel>
			</mx:Canvas>
		</mx:ViewStack>
		<mx:ApplicationControlBar y="0" height="38" right="0" left="0" dock="true">
			<mx:Label text="PeteTweet" fontSize="20"/>
			<mx:Spacer width="30"/>
			<mx:ToggleButtonBar dataProvider="appStack">
			</mx:ToggleButtonBar>
			<mx:Spacer width="30"/>
			<mx:Button label="Logout" click="doLogout();"/>
		</mx:ApplicationControlBar>
		</mx:Canvas>
	</mx:ViewStack>
	
</mx:Application>
