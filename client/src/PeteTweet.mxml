<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:petetweet="com.petetweet.client.components.*"
	creationComplete="init();">
	<mx:Script source="com/petetweet/client/scripts/ConstantVariables.as" />
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import com.petetweet.client.events.*;
			import mx.rpc.events.FaultEvent;
			import com.adobe.crypto.SHA256;
			import com.adobe.crypto.MD5;
			public var gw:NetConnection = new NetConnection();
			
			[Bindable]
			private var tweets:ArrayCollection = new ArrayCollection();
			
			public function init():void{
				gw.connect("https://petetweet.appspot.com/api");
				
				gw.call(API_STATUS, new Responder(statusPass, statusFail));
			}
			public function loginFormInit():void {
				loginForm.addEventListener("LoginEvent",loginHandler);
				loginForm.addEventListener("RegisterEvent",registerHandler);
			}
			public function goToMainPage():void {
				viewstack1.selectedIndex = 2;
				gw.call(API_GETALL, new Responder(getAllTweetsPass, getAllTweetsFail));
			}
			
			//--------------------TWEET FUNCTIONS----------------------------------
			public function getAllTweetsPass(arr:Array):void{
				tweets.removeAll();
				for(var obj:Object in arr) {
					tweets.addItem(arr[obj]);
				}
				trace("Tweet get all passed");
			}
			public function getAllTweetsFail(o:Object):void{
				trace("Tweet get all failed");
			}
			public function updateTweets():void {
				gw.call(API_GETALL, new Responder(getAllTweetsPass, getAllTweetsFail));
			}
			
			//--------------------END TWEET FUNCTIONS----------------------------------
			
			//--------------------STATUS FUNCTIONS----------------------------------
			//TODO:Put this information in a page before the login page
			public function statusPass(b:Boolean):void {
				if(b)
					goToMainPage();
				else
					viewstack1.selectedIndex = 1;
			}
			public function statusFail(b:Boolean):void {
				viewstack1.selectedIndex = 1;
			}
			
			//--------------------END STATUS FUNCTIONS----------------------------------
			
			//--------------------LOGIN FUNCTIONS----------------------------------
			public function loginHandler(event:LoginEvent):void {
				processLogin(event.username, event.password);
				trace("Got login: "+event.username);
			}
			public function processLogin(username:String,password:String):void{
				//TODO: error check username and password
				password = SHA256.hash(password);	
				gw.call(API_LOGIN, new Responder(loginPass, loginFail),username,password);
			}
			public function loginPass(userid:int):void {
				goToMainPage();
			}
			public function loginFail(o:Object):void {
				loginForm.dispatchEvent(new LoginFailEvent(o));
			}
			//-----------------END LOGIN FUCTIONS-----------------------------------
			
			//-----------------REGISTER FUNCTIONS-----------------------------------
			public function registerHandler(event:RegisterEvent):void {
				processRegister(event.username, event.password, event.cpassword, event.firstname,event.lastname, event.email);
				trace("Got login: "+event.username);
			}
			public function processRegister(username:String,password:String,cpassword:String,
											firstname:String,lastname:String,email:String):void {
				password = SHA256.hash(password);
				gw.call(API_REGISTER, new Responder(registerPass, registerFail),username,password,firstname,lastname,email);
			}
			public function registerPass(o:Object):void {
				//TODO: login perhaps? or make the user login w/ new user/pass combo, change o:Object to correct param
				loginForm.dispatchEvent(new RegisterPassEvent());			
			}
			public function registerFail(o:Object):void{
				loginForm.dispatchEvent(new RegisterFailEvent(o));			
			}
			//-----------------END REGISTER FUNCTIONS-------------------------------
			
			//-----------------POST FUNCTIONS-------------------------------
			public function handlePost():void{
				var textToSend:String = txt_tweetInput.htmlText;
				gw.call(API_POST, new Responder(postPass, postFail),textToSend);
			}
			public function postPass(o:Object):void{
				trace("Post Passed");
				updateTweets();
				txt_tweetInput.text = "";
				
			}
			public function postFail(o:Object):void{
				trace("Post Failed");
			}
			//-----------------END POST FUNCTIONS-------------------------------
			

			private function updateHeight(target:Object):void
			{
				target.validateNow();
				target.height = target.textHeight + 5;
				target.validateSize();
			}
			
			[Bindable]
			private function gravatarUrl(email:String):String {
				
				"http://www.gravatar.com/avatar/917fb9355a5d0593f86472f7fb61df41?s=60&d=identicon&r=G"
				
				var gid:String = MD5.hash(email);
				var url:String = "http://www.gravatar.com/avatar/" + gid + "?s=70&d=identicon&r=G";
				
				trace(url);
				return url;
			}


			
		]]>
	</mx:Script>
	<mx:ViewStack id="viewstack1" left="0" right="0" top="0" bottom="0" selectedIndex="0">
		<mx:Canvas label="loading" width="100%" height="100%">
			<mx:ProgressBar indeterminate="true" horizontalCenter="0" verticalCenter="0"/>
		</mx:Canvas>
		<mx:Canvas label="login" width="100%" height="100%">
			<petetweet:login_register horizontalCenter="0" verticalCenter="-6" id="loginForm" creationComplete="loginFormInit();">
			</petetweet:login_register>
		</mx:Canvas>
		<mx:Accordion left="0" top="0" bottom="0" right="0">
			<mx:Canvas label="Home Page" width="100%" height="100%">
				<mx:RichTextEditor y="10" title="What are you doing?" width="421" height="213" x="10" id="txt_tweetInput">
				</mx:RichTextEditor>
		        <mx:Button x="364" y="192" label="Post" click="handlePost();"/>
				<mx:Button x="285" y="192" label="Refresh" click="updateTweets();"/>

				<mx:List dataProvider="{tweets}" variableRowHeight="true" right="10" left="439" top="10" bottom="10">
					<mx:itemRenderer>
						<mx:Component>
							<petetweet:TweetRenderer>
								
							</petetweet:TweetRenderer>
		            	</mx:Component>
					</mx:itemRenderer>
				</mx:List>
				<mx:Panel x="10" y="231" width="421" height="149" layout="absolute" title="Search for Tweets">
				</mx:Panel>
			</mx:Canvas>
			<mx:Canvas label="Messaging" width="100%" height="100%">
			</mx:Canvas>
			<mx:Canvas label="Profile" width="100%" height="100%">
			</mx:Canvas>
		</mx:Accordion>
	</mx:ViewStack>
	
</mx:Application>
