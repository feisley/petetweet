<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="362" height="248"
	creationComplete="init();">

	<mx:Script>
		<![CDATA[
			import com.petetweet.client.events.*;
			import mx.validators.Validator;
			import mx.events.ValidationResultEvent;
			
			[Bindable]
            public var formIsValid:Boolean = false;
    
            // Holds a reference to the currently focussed 
            // control on the form.
            private var focussedFormControl:DisplayObject;
			
			public function init():void{
				this.addEventListener("LoginFailEvent",loginFailure);
				this.addEventListener("RegisterFailEvent",registerFailure);
				this.addEventListener("RegisterPassEvent",registerPass);
			}
			
			public function doButton():void {
				if(currentState == 'Register' || currentState == 'RegisterError'){
					doRegister();
				}
				else{
					doLogin();
				}
			}
			
			public function doLogin():void {
				var username:String = txt_username.text;
				var password:String = txt_password.text;
				txt_password.text = "";
				dispatchEvent(new LoginEvent(username,password));
				//trace("Login: U="+username+"P="+password);
			}
			public function loginFailure(event:LoginFailEvent):void{
				//TODO: Display login failed somewhere
				currentState='LoginError';
				lbl_login_error.text = event.error.description;
				formIsValid = false;
			}
			
			public function doRegister():void {
				var username:String = txt_username.text;
				var password:String = txt_password.text;
				var cpassword:String = txt_cpassword.text;
				var firstname:String = txt_firstname.text;
				var lastname:String = txt_lastname.text;
				var email:String = txt_email.text;
				
				dispatchEvent(new RegisterEvent(username,password,cpassword,firstname,lastname,email));
			}
			private function validateForm(event:Event):void 
            {                    
                // Save a reference to the currently focussed form control
                // so that the isValid() helper method can notify only
                // the currently focussed form control and not affect
                // any of the other form controls.
                focussedFormControl = event.target as DisplayObject;    

                // Mark the form as valid to start with                
                formIsValid = true;            
                
                if(currentState=='Register' || currentState=='RegisterError'){ 
                	validate(nameValidator);
                	validate(passwordValidator);
                	validate(cpasswordValidator);
                	validate(lastnameValidator);
                	validate(firstnameValidator);
                	validate(emailValidator);
                	if(formIsValid && (txt_password.text != txt_cpassword.text)){
	                	formIsValid = false;
	                	currentState='RegisterError';
						lbl_register_error.text = "Your passwords do not match";
	                }
	                else if(formIsValid){
	                	currentState='Register';
						lbl_register_error.text = "";
	                }
                }
                else{
                	validate(nameValidator);
                	validate(passwordValidator);
                }
            }
            private function validate(validator:Validator):Boolean
             {                
                 var validatorSource:DisplayObject = validator.source as DisplayObject;
                
                var suppressEvents:Boolean = (validatorSource != focussedFormControl);
                
                var event:ValidationResultEvent = validator.validate(null, suppressEvents); 
                                
                // Check if validation passed and return a boolean value accordingly.
                 var currentControlIsValid:Boolean = (event.type == ValidationResultEvent.VALID);
                 
                 // Update the formIsValid flag
                 formIsValid = formIsValid && currentControlIsValid;
                 
                 return currentControlIsValid;
              }

			public function registerFailure(event:RegisterFailEvent):void{
				//TODO: Display register failed somewhere
				currentState='RegisterError';
				lbl_register_error.text = event.error.description;
			}
			public function registerPass(event:RegisterPassEvent):void{
				currentState='LoginError';
				txt_username.text = "";
				txt_password.text = "";
				lbl_login_error.text = "You have successfully Registered. Please login.";
			}
		]]>
	</mx:Script>

	<!-- Define one view state, in addition to the base state.-->
    <mx:states>
        <mx:State name="Register">
            <mx:AddChild relativeTo="{loginForm}" position="lastChild">
                <mx:target>
                    <mx:FormItem id="confirm" label="Confirm:">
                        <mx:TextInput id="txt_cpassword" displayAsPassword="true" change="validateForm(event);"/>
                    </mx:FormItem>
                </mx:target>
            </mx:AddChild>
            <mx:SetProperty target="{loginPanel}" name="title" value="Register"/>
            <mx:SetProperty target="{loginButton}" name="label" value="Register"/>
            <mx:SetStyle target="{loginButton}" 
                name="color" value="blue"/>
            <mx:RemoveChild target="{registerLink}"/>
            <mx:AddChild relativeTo="{spacer1}" position="before">
                <mx:target>
                    <mx:LinkButton id="loginLink" label="Return to Login" click="currentState=''"/>
                </mx:target>
            </mx:AddChild>
            <mx:SetProperty name="height" value="356"/>
            <mx:SetProperty target="{loginForm}" name="height" value="199"/>
            <mx:AddChild relativeTo="{loginForm}" position="lastChild">
                <mx:FormItem id="firstname" label="First Name:">
                    <mx:TextInput id="txt_firstname" change="validateForm(event);"/>
                </mx:FormItem>
            </mx:AddChild>
            <mx:AddChild relativeTo="{loginForm}" position="lastChild">
                <mx:FormItem id="lastname" label="Last Name:">
                    <mx:TextInput id="txt_lastname" change="validateForm(event);"/>
                </mx:FormItem>
            </mx:AddChild>
            <mx:AddChild relativeTo="{loginForm}" position="lastChild">
                <mx:FormItem id="email" label="Email:">
                    <mx:TextInput id="txt_email" change="validateForm(event);"/>
                </mx:FormItem>
            </mx:AddChild>
            <mx:SetProperty name="width" value="362"/>
            <mx:SetProperty target="{loginPanel}" name="width" value="362"/>
            <mx:SetProperty target="{text1}" name="x" value="10"/>
            <mx:SetProperty target="{text1}" name="y" value="10"/>
            <mx:SetProperty target="{controlbar1}" name="x" value="0"/>
            <mx:SetProperty target="{controlbar1}" name="y" value="276"/>
            <mx:SetProperty target="{loginPanel}" name="layout" value="absolute"/>
            <mx:SetStyle target="{loginForm}" name="horizontalCenter" value="0"/>
            <mx:SetProperty target="{loginForm}" name="width" value="320"/>
            <mx:SetProperty target="{loginButton}" name="enabled" value="true"/>
        </mx:State>
        <mx:State name="LoginError">
            <mx:AddChild relativeTo="{loginPanel}" position="lastChild">
                <mx:Text width="321" color="#F30314"
                    id="lbl_login_error" x="10" y="40"/>
            </mx:AddChild>
            <mx:SetProperty target="{loginForm}" name="y" value="65"/>
            <mx:SetProperty target="{loginForm}" name="width" value="320"/>
        </mx:State>
        <mx:State name="RegisterError" basedOn="Register">
            <mx:SetProperty target="{loginForm}" name="y" value="70"/>
            <mx:AddChild relativeTo="{loginForm}" position="before">
                <mx:Text width="323" color="#ED020D"
                    id="lbl_register_error" x="10" y="45"/>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    
    <mx:EmailValidator
        id="emailValidator"
        source="{txt_email}" property="text"
    />
    <mx:StringValidator 
        id="nameValidator"
        source="{txt_username}" 
        property="text"
        minLength="6"
    />
    <mx:StringValidator 
        id="passwordValidator"
        source="{txt_password}" 
        property="text"
        minLength="6"
    />
    <mx:StringValidator 
        id="cpasswordValidator"
        source="{txt_cpassword}" 
        property="text"
        minLength="6"
    />
    <mx:StringValidator 
        id="firstnameValidator"
        source="{txt_firstname}" 
        property="text"
        minLength="2"
    />
    <mx:StringValidator 
        id="lastnameValidator"
        source="{txt_lastname}" 
        property="text"
        minLength="2"
    />



    <mx:transitions>
        <!-- Define the transition from the base state to the Register state.-->
        <mx:Transition id="toRegister" fromState="*" toState="Register">
            <mx:Sequence targets="{[loginPanel, registerLink, confirm, loginLink, spacer1]}">
                <mx:RemoveChildAction/>
                <mx:SetPropertyAction target="{loginPanel}" name="title"/>
                <mx:SetPropertyAction target="{loginButton}" name="label"/>
                <mx:SetStyleAction target="{loginButton}" name="color"/>
                <mx:Resize target="{loginPanel}"/>
                <mx:AddChildAction/>
            </mx:Sequence>
        </mx:Transition>

        <!-- Define the transition from the Register state to the base state.-->
        <mx:Transition id="toDefault" fromState="Register" toState="*">
            <mx:Sequence targets="{[loginPanel, registerLink, 
                    confirm, loginLink, spacer1]}">
                <mx:RemoveChildAction/>
                <mx:SetPropertyAction target="{loginPanel}" name="title"/>
                <mx:SetPropertyAction  target="{loginButton}" name="label"/>
                <mx:SetStyleAction target="{loginButton}" name="color"/>
                <mx:Resize target="{loginPanel}"/>
                <mx:AddChildAction/>
            </mx:Sequence>
        </mx:Transition>
	</mx:transitions>

    <!-- Define a Panel container that defines the login form.-->
    <mx:Panel title="Login" id="loginPanel" 
        horizontalScrollPolicy="off" verticalScrollPolicy="off"
        paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10" width="362" layout="absolute">
	
        <mx:Text width="322" color="blue"
            text="Welcome to PeteTweet. Please login below. If you do not have an account click &quot;Need to Register?&quot; below." id="text1" x="10" y="10"/>

        <mx:Form id="loginForm" y="46" horizontalCenter="0" width="320">
            <mx:FormItem label="Username:" id="formitem1">
                <mx:TextInput id="txt_username" change="validateForm(event);"/>
            </mx:FormItem>
            <mx:FormItem label="Password:">
                <mx:TextInput id="txt_password" displayAsPassword="true" change="validateForm(event);"/>
            </mx:FormItem>
        </mx:Form>
        <mx:ControlBar id="controlbar1" x="0" y="170">
            <mx:LinkButton id="registerLink"  label="Need to Register?"
                click="currentState='Register';validateForm(event);"/>
            <mx:Spacer width="100%" id="spacer1"/>
            <mx:Button label="Login" id="loginButton" click="doButton();" enabled="{formIsValid}"/>
        </mx:ControlBar>
    </mx:Panel>
</mx:Canvas>
